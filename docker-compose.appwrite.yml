version: '3.8'

services:
  # Your existing Next.js application
  zeropoint-website:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - OPENAI_API_KEY=${OPENAI_API_KEY:-placeholder}
    container_name: zeropoint-labs-website
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      # AppWrite configuration
      - NEXT_PUBLIC_APPWRITE_ENDPOINT=https://zeropoint-labs.com/v1
      - NEXT_PUBLIC_APPWRITE_PROJECT_ID=zeropoint-labs
    env_file:
      - .env.local
    networks:
      - zeropoint-network
    depends_on:
      - appwrite
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # AppWrite services
  appwrite:
    image: appwrite/appwrite:1.5.7
    container_name: appwrite
    restart: unless-stopped
    networks:
      - zeropoint-network
    volumes:
      - appwrite-uploads:/storage/uploads:rw
      - appwrite-cache:/storage/cache:rw
      - appwrite-config:/storage/config:rw
      - appwrite-certificates:/storage/certificates:rw
      - appwrite-functions:/storage/functions:rw
    depends_on:
      - mariadb
      - redis
    environment:
      - _APP_ENV=production
      - _APP_WORKER_PER_CORE=6
      - _APP_LOCALE=en
      - _APP_CONSOLE_WHITELIST_ROOT=enabled
      - _APP_CONSOLE_WHITELIST_EMAILS=
      - _APP_CONSOLE_WHITELIST_IPS=
      - _APP_SYSTEM_EMAIL_NAME=Zero Point Labs
      - _APP_SYSTEM_EMAIL_ADDRESS=admin@zeropoint-labs.com
      - _APP_SYSTEM_SECURITY_EMAIL_ADDRESS=security@zeropoint-labs.com
      - _APP_SYSTEM_RESPONSE_FORMAT=
      - _APP_OPTIONS_ABUSE=enabled
      - _APP_OPTIONS_ROUTER_PROTECTION=disabled
      - _APP_OPENSSL_KEY_V1=${APPWRITE_SECRET_KEY:-your_appwrite_secret_key_here}
      - _APP_DOMAIN=zeropoint-labs.com
      - _APP_DOMAIN_TARGET=zeropoint-labs.com
      - _APP_REDIS_HOST=redis
      - _APP_REDIS_PORT=6379
      - _APP_REDIS_USER=
      - _APP_REDIS_PASS=
      - _APP_DB_HOST=mariadb
      - _APP_DB_PORT=3306
      - _APP_DB_SCHEMA=appwrite
      - _APP_DB_USER=appwrite
      - _APP_DB_PASS=${MYSQL_PASSWORD:-your_database_password_here}
      - _APP_SMTP_HOST=
      - _APP_SMTP_PORT=
      - _APP_SMTP_SECURE=
      - _APP_SMTP_USERNAME=
      - _APP_SMTP_PASSWORD=
      - _APP_USAGE_STATS=enabled
      - _APP_INFLUXDB_HOST=
      - _APP_INFLUXDB_PORT=
      - _APP_STORAGE_LIMIT=30000000
      - _APP_STORAGE_PREVIEW_LIMIT=20000000
      - _APP_STORAGE_ANTIVIRUS=disabled
      - _APP_STORAGE_ANTIVIRUS_HOST=clamav
      - _APP_STORAGE_ANTIVIRUS_PORT=3310
      - _APP_STORAGE_DEVICE=local
      - _APP_STORAGE_S3_ACCESS_KEY=
      - _APP_STORAGE_S3_SECRET=
      - _APP_STORAGE_S3_REGION=
      - _APP_STORAGE_S3_BUCKET=
      - _APP_STORAGE_DO_SPACES_ACCESS_KEY=
      - _APP_STORAGE_DO_SPACES_SECRET=
      - _APP_STORAGE_DO_SPACES_REGION=
      - _APP_STORAGE_DO_SPACES_BUCKET=
      - _APP_STORAGE_BACKBLAZE_ACCESS_KEY=
      - _APP_STORAGE_BACKBLAZE_SECRET=
      - _APP_STORAGE_BACKBLAZE_REGION=
      - _APP_STORAGE_BACKBLAZE_BUCKET=
      - _APP_STORAGE_LINODE_ACCESS_KEY=
      - _APP_STORAGE_LINODE_SECRET=
      - _APP_STORAGE_LINODE_REGION=
      - _APP_STORAGE_LINODE_BUCKET=
      - _APP_STORAGE_WASABI_ACCESS_KEY=
      - _APP_STORAGE_WASABI_SECRET=
      - _APP_STORAGE_WASABI_REGION=
      - _APP_STORAGE_WASABI_BUCKET=
      - _APP_FUNCTIONS_SIZE_LIMIT=30000000
      - _APP_FUNCTIONS_TIMEOUT=900
      - _APP_FUNCTIONS_BUILD_TIMEOUT=900
      - _APP_FUNCTIONS_CONTAINERS=10
      - _APP_FUNCTIONS_CPUS=0
      - _APP_FUNCTIONS_MEMORY=0
      - _APP_FUNCTIONS_MEMORY_SWAP=0
      - _APP_FUNCTIONS_RUNTIMES=node-16.0,php-8.0,python-3.9,ruby-3.0

  # AppWrite MariaDB Database
  mariadb:
    image: mariadb:10.7
    container_name: appwrite-mariadb
    restart: unless-stopped
    networks:
      - zeropoint-network
    volumes:
      - appwrite-mariadb:/var/lib/mysql:rw
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-your_mysql_root_password_here}
      - MYSQL_DATABASE=appwrite
      - MYSQL_USER=appwrite
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-your_database_password_here}
    command: 'mysqld --innodb-flush-method=fsync'

  # AppWrite Redis Cache
  redis:
    image: redis:7.0-alpine
    container_name: appwrite-redis
    restart: unless-stopped
    networks:
      - zeropoint-network
    volumes:
      - appwrite-redis:/data:rw

  # Your existing Nginx
  nginx:
    image: nginx:alpine
    container_name: zeropoint-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - zeropoint-website
      - appwrite
    networks:
      - zeropoint-network

volumes:
  appwrite-mariadb:
  appwrite-redis:
  appwrite-uploads:
  appwrite-cache:
  appwrite-config:
  appwrite-certificates:
  appwrite-functions:

networks:
  zeropoint-network:
    driver: bridge
